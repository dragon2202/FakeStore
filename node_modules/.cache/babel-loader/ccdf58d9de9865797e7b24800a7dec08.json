{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calvin\\\\Documents\\\\FakeStore\\\\src\\\\pages\\\\home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport List from 'antd/lib/list';\nimport Card from 'antd/lib/card';\nimport Input from 'antd/lib/input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nexport default function Home() {\n  _s();\n\n  const [product, setProduct] = useState([]);\n  const [searchParam, setParam] = useState('');\n  useEffect(() => {\n    fetch('https://fakestoreapi.com/products/').then(res => res.json()).then(productsArray => {\n      setProduct(productsArray);\n    });\n  }, []);\n\n  SearchFilterMap = (item, searchParam) => {\n    if (searchParam == \"\") {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        cover: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"example\",\n          src: item.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const onSearch = value => setParam(value);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"Fake Store Assessment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          className: \"search-bar\",\n          placeholder: \"input search text\",\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          className: \"antd-list\",\n          grid: {\n            gutter: 8,\n            column: 4\n          },\n          dataSource: product,\n          renderItem: item => SearchFilterMap(item, searchParam)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"Xiu6cst6gzdfarYl8fVXS0hTODI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Calvin/Documents/FakeStore/src/pages/home.js"],"names":["React","useState","useEffect","List","Card","Input","Search","Home","product","setProduct","searchParam","setParam","fetch","then","res","json","productsArray","SearchFilterMap","item","image","title","price","category","description","onSearch","value","gutter","column"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAWD,KAAjB;AAEA,eAAe,SAASE,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAES,WAAF,EAAeC,QAAf,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,aAAD,IAAmB;AACrBP,MAAAA,UAAU,CAACO,aAAD,CAAV;AACH,KAJL;AAKH,GANQ,EAMN,EANM,CAAT;;AAQAC,EAAAA,eAAe,GAAG,CAACC,IAAD,EAAOR,WAAP,KAAuB;AACrC,QAAGA,WAAW,IAAI,EAAlB,EAAqB;AACjB,0BACI,QAAC,IAAD;AAAM,QAAA,KAAK,eACP;AAAK,UAAA,GAAG,EAAC,SAAT;AAAmB,UAAA,GAAG,EAAEQ,IAAI,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA,gCAGI;AAAA,iCAAG;AAAA,sBAASD,IAAI,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,oBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,oBAAIJ,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH;AACJ,GAbD;;AAeA,QAAMC,QAAQ,GAAGC,KAAK,IAAId,QAAQ,CAACc,KAAD,CAAlC;;AAEA,sBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,2BACI;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACA,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,WAAW,EAAC,mBAA3C;AAA+D,UAAA,QAAQ,EAAED;AAAzE;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI,QAAC,IAAD;AACI,UAAA,SAAS,EAAC,WADd;AAEI,UAAA,IAAI,EAAE;AAAEE,YAAAA,MAAM,EAAC,CAAT;AAAYC,YAAAA,MAAM,EAAE;AAApB,WAFV;AAGI,UAAA,UAAU,EAAEnB,OAHhB;AAII,UAAA,UAAU,EAAEU,IAAI,IAAID,eAAe,CAACC,IAAD,EAAOR,WAAP;AAJvC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA7CuBH,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport List from 'antd/lib/list'\r\nimport Card from 'antd/lib/card'\r\nimport Input from 'antd/lib/input'\r\nconst {Search} = Input\r\n\r\nexport default function Home() {\r\n    const [ product, setProduct ] = useState([])\r\n    const [ searchParam, setParam ] = useState('')\r\n    useEffect(() => {\r\n        fetch('https://fakestoreapi.com/products/')\r\n            .then(res => res.json())\r\n            .then((productsArray) => {\r\n                setProduct(productsArray)\r\n            })\r\n    }, [])\r\n\r\n    SearchFilterMap = (item, searchParam) => {\r\n        if(searchParam == \"\"){\r\n            return(\r\n                <Card cover={\r\n                    <img alt=\"example\" src={item.image} />\r\n                }>\r\n                    <p><strong>{item.title}</strong></p>\r\n                    <p>{item.price}</p>\r\n                    <p>{item.category}</p>\r\n                    <p>{item.description}</p>\r\n                </Card>\r\n            )\r\n        }\r\n    }\r\n\r\n    const onSearch = value => setParam(value);\r\n\r\n    return (\r\n        <main className=\"home\">\r\n            <section>\r\n                <p className=\"title\">Fake Store Assessment</p>\r\n                <div className=\"list\">\r\n                <Search className=\"search-bar\" placeholder=\"input search text\" onSearch={onSearch} />\r\n                    <List\r\n                        className=\"antd-list\"\r\n                        grid={{ gutter:8, column: 4 }}\r\n                        dataSource={product}\r\n                        renderItem={item => SearchFilterMap(item, searchParam)}\r\n                    />\r\n                </div>\r\n\r\n            </section>\r\n        </main>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}